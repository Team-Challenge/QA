{
	"info": {
		"_postman_id": "f4f53a66-c355-4e27-9d42-5466399f9ef4",
		"name": "Created shop front back",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31129478"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "User Registration",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"testik@mail.com\",\n  \"full_name\": \"Poli Bum\",\n  \"password\": \"Testpwd4\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/accounts/signup",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"accounts",
								"signup"
							]
						}
					},
					"response": [
						{
							"name": "Successful registration",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"full_name\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										"signup"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"example\": {\n    \"link\": \"http://api.example.com/accounts/verify/...\",\n    \"user\": {\n      \"id\": 1,\n      \"email\": \"user@example.com\",\n      \"full_name\": \"John Doe\"\n    }\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"full_name\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										"signup"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"full_name\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/signup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										"signup"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "User Sign-In",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"var token = data.access_token;",
									"console.log(token);",
									"",
									"pm.collectionVariables.set(\"access_token\", token)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "baseURL",
								"value": "http://127.0.0.1:8080",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"testik@mail.com\",\n  \"password\": \"Testpwd4\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/accounts/signin",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"accounts",
								"signin"
							]
						}
					},
					"response": [
						{
							"name": "Successful sign-in",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/signin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										"signin"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"example\": {\n    \"access_token\": \"your_access_token\",\n    \"refresh_token\": \"your_refresh_token\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Created updated shop",
			"item": [
				{
					"name": "Create shop valid data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Shop created successfully\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Shop created successfully\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Vesna\",\n  \"phone_number\": \"+380675653343\",\n  \"description\": \"Nice\",\n  \"link\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update shop",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Shop updated successfully\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Shop updated successfully\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Vesna Krasna\",\n  \"phone_number\": \"+380675653344\",\n  \"description\": \"Nice\",\n  \"link\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop"
							]
						}
					},
					"response": []
				},
				{
					"name": "Empty field",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 422', function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test(\"response body is json\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.value).to.eql();",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"\",\n  \"phone_number\": \"\",\n  \"description\": \"\",\n  \"link\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 422', function () {",
									"    pm.response.to.have.status(422);",
									"})",
									"",
									"pm.test(\"Value error, Invalid phone number format. Must start with +380 and have 9 digits.\", function () {",
									"    var responseBody = pm.response.json();",
									"    pm.expect(responseBody.error[0].msg).to.eql('Value error, Invalid phone number format. Must start with +380 and have 9 digits.');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Vesna\",\n  \"phone_number\": \"0675653343\",\n  \"description\": \"Nice\",\n  \"link\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid shop name(with special characters)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 422', function () {",
									"  pm.response.to.have.status(422);",
									"})",
									"",
									"pm.test('Value error, Invalid shop name format', function () {",
									"    pm.expect(pm.response.json().error[0].msg).to.eql('Value error, Invalid shop name format');",
									"})",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"%^^&&****(.    $$#@@@@\",\n  \"phone_number\": \"+380675653343\",\n  \"description\": \"Nice\",\n  \"link\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid shop name(more than 30 simbols)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 422', function () {",
									"    pm.response.to.have.status(422);",
									"})",
									"",
									"pm.test('Value error, Invalid shop name format', function () {",
									"    pm.expect(pm.response.json().error[0].msg).to.eql('Value error, Invalid shop name format');",
									"})",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"456jhk. 765rresngggvvghjhff4455566765e5zz``weuuiuunnm.   iiuuufsz`\",\n  \"phone_number\": \"+380675653343\",\n  \"description\": \"Nice\",\n  \"link\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid desckription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 422', function () {",
									"    pm.response.to.have.status(422);",
									"})",
									"",
									"pm.test(\"Value error, Invalid product_detail format\", function () {",
									"    var responseBody = pm.response.json();",
									"    pm.expect(responseBody.error[0].msg).to.eql('Value error, Invalid product_detail format');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Vesna\",\n  \"phone_number\": \"+380675653343\",\n  \"description\": \"   $56899\",\n  \"link\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update shop valid data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Shop updated successfully\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Shop updated successfully\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Vesna\",\n  \"phone_number\": \"+380675653343\",\n  \"description\": \"Nice\",\n  \"link\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Shop photo",
			"item": [
				{
					"name": "Upload Shop Photo JPG valid format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Перевірка наявності поля \"photo_shop\" у тілі відповіді.', function () {",
									"    pm.expect(pm.response.json()).to.have.property('photo_shop');",
									"});",
									"pm.test('Значення поля \"photo_shop\" є рядком', function () {",
									"    pm.expect(pm.response.json().photo_shop).to.be.a('string');",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "baseURL",
								"value": "http://127.0.0.1:8080",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) ",
									"type": "file",
									"src": "IMG_2813.JPG"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop_photo",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop_photo"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "<string>",
											"description": "(Required) ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/shops/shop_photo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shops",
										"shop_photo"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"example\": {\n    \"photo_shop\": \"https://api.dorechi.store/static/media/shops/filename.png\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "<string>",
											"description": "(Required) ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/shops/shop_photo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shops",
										"shop_photo"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "Photo shop not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "<string>",
											"description": "(Required) ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/shops/shop_photo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shops",
										"shop_photo"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "Request entity too large",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "<string>",
											"description": "(Required) ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/shops/shop_photo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shops",
										"shop_photo"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "Invalid file format",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "<string>",
											"description": "(Required) ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/shops/shop_photo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shops",
										"shop_photo"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Upload Shop Photo JPG valid format Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Перевірка наявності поля \"photo_shop\" у тілі відповіді.', function () {",
									"    pm.expect(pm.response.json()).to.have.property('photo_shop');",
									"});",
									"pm.test('Значення поля \"photo_shop\" є рядком', function () {",
									"    pm.expect(pm.response.json().photo_shop).to.be.a('string');",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "baseURL",
								"value": "http://127.0.0.1:8080",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) ",
									"type": "file",
									"src": "IMG_2813.JPG"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop_photo",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop_photo"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "<string>",
											"description": "(Required) ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/shops/shop_photo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shops",
										"shop_photo"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"example\": {\n    \"photo_shop\": \"https://api.dorechi.store/static/media/shops/filename.png\"\n  }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "<string>",
											"description": "(Required) ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/shops/shop_photo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shops",
										"shop_photo"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "Photo shop not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "<string>",
											"description": "(Required) ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/shops/shop_photo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shops",
										"shop_photo"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "Request entity too large",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "<string>",
											"description": "(Required) ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/shops/shop_photo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shops",
										"shop_photo"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "Invalid file format",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"value": "<string>",
											"description": "(Required) ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/shops/shop_photo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shops",
										"shop_photo"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Upload Shop Photo valid format(more than 5 mb)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 413\", function () {",
									"pm.test(\"File size too large. Maximum file size is 3MB\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"File size too large. Maximum file size is 3MB\");",
									"});",
									"    pm.response.to.have.status(413);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "baseURL",
								"value": "http://127.0.0.1:8080",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) ",
									"type": "file",
									"src": "breathtaking-shot-of-beautiful-stones-under-turquoise-water-of-a-lake-and-hills-in-the-background.jpg"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop_photo",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop_photo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Shop Photo Invalid format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"pm.test(\"Bad request. Does file have proper file format?\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Bad request. Does file have proper file format?\");",
									"});",
									"    pm.response.to.have.status(422);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "baseURL",
								"value": "http://127.0.0.1:8080",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) ",
									"type": "file",
									"src": "Kharkiv Tone 04.10.2020.ttf"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop_photo",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop_photo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Shop Photo Empty field",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Invalid request data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid request data\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) ",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop_photo",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop_photo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Shop Photo Webr format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Перевірка наявності поля \"photo_shop\" у тілі відповіді.', function () {",
									"    pm.expect(pm.response.json()).to.have.property('photo_shop');",
									"});",
									"pm.test('Значення поля \"photo_shop\" є рядком', function () {",
									"    pm.expect(pm.response.json().photo_shop).to.be.a('string');",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) ",
									"type": "file",
									"src": "pexels-photo-8169649.webp"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop_photo",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop_photo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Shop Photo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Значення поля \"photo_shop\" є рядком', function () {",
									"    pm.expect(pm.response.json().photo_shop).to.be.a('string');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop_photo",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop_photo"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shops/shop_photo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shops",
										"shop_photo"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"example\": {\n    \"photo_shop\": \"https://api.dorechi.store/static/media/shops/filename.png\"\n  }\n}"
						},
						{
							"name": "Photo shop not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shops/shop_photo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shops",
										"shop_photo"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete Shop Photo successfully",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"pm.test(\"Photo shop deleted successfully\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Photo shop deleted successfully\");",
									"});",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop_photo",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop_photo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Shop Photo Not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 \", function () {",
									"pm.test(\"Photo shop not found\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Photo shop not found\");",
									"});",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop_photo",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop_photo"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shops/shop_photo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shops",
										"shop_photo"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"example\": {\n    \"photo_shop\": \"https://api.dorechi.store/static/media/shops/filename.png\"\n  }\n}"
						},
						{
							"name": "Photo shop not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/shops/shop_photo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"shops",
										"shop_photo"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete Shop Photo not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"pm.test(\"Photo shop not found\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Photo shop not found\");",
									"});",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop_photo",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop_photo"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Shop banner",
			"item": [
				{
					"name": "Upload Shop Banner Ok",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Перевірка наявності поля \"shop_banner\" у тілі відповіді.', function () {",
									"    pm.expect(pm.response.json()).to.have.property('shop_banner');",
									"});",
									"pm.test('Значення поля \"shop_banner\" є рядком', function () {",
									"    pm.expect(pm.response.json().shop_banner).to.be.a('string');",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) ",
									"type": "file",
									"src": "2024-03-12 21.03.41.jpg"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop_banner",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop_banner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Shop Banner Ok Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Перевірка наявності поля \"shop_banner\" у тілі відповіді.', function () {",
									"    pm.expect(pm.response.json()).to.have.property('shop_banner');",
									"});",
									"pm.test('Значення поля \"shop_banner\" є рядком', function () {",
									"    pm.expect(pm.response.json().shop_banner).to.be.a('string');",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) ",
									"type": "file",
									"src": "2024-03-12 21.03.41.jpg"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop_banner",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop_banner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Shop Banner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Значення поля \"shop_banner\" є рядком', function () {",
									"    pm.expect(pm.response.json().shop_banner).to.be.a('string');",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop_banner",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop_banner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete shop banner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"pm.test(\"Banner shop deleted successfully\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Banner shop deleted successfully\");",
									"});",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop_banner",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop_banner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Shop Banner Invalid format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"pm.test(\"Bad request. Does file have proper file format?\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Bad request. Does file have proper file format?\");",
									"});",
									"    pm.response.to.have.status(422);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) ",
									"type": "file",
									"src": "Звіт з ВП коледж 2й курс (9кл, 11кл).pdf"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop_banner",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop_banner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Shop Banner (more than 3mb)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 413\", function () {",
									"pm.test(\"File size too large. Maximum file size is 3MB\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"File size too large. Maximum file size is 3MB\");",
									"});",
									"    pm.response.to.have.status(413);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) ",
									"type": "file",
									"src": "breathtaking-shot-of-beautiful-stones-under-turquoise-water-of-a-lake-and-hills-in-the-background.jpg"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop_banner",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop_banner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Shop Banner Empty field",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"pm.test(\"Invalid request data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid request data\");",
									"});",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) ",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8080/shops/shop_banner",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"shops",
								"shop_banner"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Shop Banner Not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"pm.test(\"Banner shop not found\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Banner shop not found\");",
							"});",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://127.0.0.1:8080/shops/shop_banner",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8080",
					"path": [
						"shops",
						"shop_banner"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Shop Information",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"pm.test(\"response is json data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.value).to.eql();",
							"});",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://127.0.0.1:8080/shops/shop_info",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8080",
					"path": [
						"shops",
						"shop_info"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "access_token",
			"value": ""
		}
	]
}