{
	"info": {
		"_postman_id": "932300c6-5514-4ecc-951c-fb83e8eec790",
		"name": "Create_product",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23764423"
	},
	"item": [
		{
			"name": "User Registration Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test('Перевірка поля email', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.user.email).to.equal('shops@mail.com');\r",
							"});\r",
							"\r",
							"pm.test('Перевірка поля full_name', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.user.full_name).to.equal('Shops Shops');\r",
							"});\r",
							"\r",
							"// pm.test('Перевірка ID', function () {\r",
							"//     var jsonData = pm.response.json();\r",
							"//     pm.expect(jsonData.user.id).to.equal(6);\r",
							"// });\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"Shops@mail.com\",\n  \"full_name\": \"Shops Shops\",\n  \"password\": \"Shopspwd1\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/accounts/signup",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"accounts",
						"signup"
					]
				}
			},
			"response": [
				{
					"name": "Successful registration",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<email>\",\n  \"full_name\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounts/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"signup"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"user\": {\n      \"id\": 1,\n      \"email\": \"user@example.com\",\n      \"full_name\": \"John Doe\"\n    }\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<email>\",\n  \"full_name\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounts/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"signup"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "User with such email already exists",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<email>\",\n  \"full_name\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounts/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"signup"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Sign-In",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Checking for the presence of the \"access_token\" field in the response body', function () {\r",
							"    pm.expect(pm.response.json()).to.have.property('access_token');\r",
							"});\r",
							"\r",
							"pm.test('the value of the \"access_token\" field is a string', function () {\r",
							"    pm.expect(pm.response.json().access_token).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test('Checking for the presence of the \"refresh_token\" field in the response body', function () {\r",
							"    pm.expect(pm.response.json()).to.have.property('refresh_token');\r",
							"});\r",
							"\r",
							"pm.test('the value of the \"refresh_token\" field is a string', function () {\r",
							"    pm.expect(pm.response.json().refresh_token).to.be.a('string');\r",
							"});\r",
							"\r",
							"var data = pm.response.json();\r",
							"var token = data.access_token;\r",
							"console.log(token);\r",
							"\r",
							"pm.collectionVariables.set(\"access_token\", token)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"Shops@mail.com\",\n  \"password\": \"Shopspwd1\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/accounts/signin",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"accounts",
						"signin"
					]
				}
			},
			"response": [
				{
					"name": "Successful sign-in",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounts/signin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"signin"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"access_token\": \"your_access_token\",\n    \"refresh_token\": \"your_refresh_token\"\n  }\n}"
				}
			]
		},
		{
			"name": "Create shop",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Душа Карпат\",\n  \"description\": \"string\",\n  \"phone_number\": \"+380665053100\",\n  \"link\": \"https://www.instagram.com/wood_decor.ukraine?utm_source=ig_web_button_share_sheet&igsh==\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8080/shops/shop",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8080",
					"path": [
						"shops",
						"shop"
					]
				}
			},
			"response": [
				{
					"name": "Shop updated successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"phone_number\": \"<string>\",\n  \"description\": \"<string>\",\n  \"link\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/shops/shop",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shops",
								"shop"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Shop updated successfully\"\n  }\n}"
				},
				{
					"name": "Shop created successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"phone_number\": \"<string>\",\n  \"description\": \"<string>\",\n  \"link\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/shops/shop",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shops",
								"shop"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Shop created successfully\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"phone_number\": \"<string>\",\n  \"description\": \"<string>\",\n  \"link\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/shops/shop",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shops",
								"shop"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Unauthorized error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"phone_number\": \"<string>\",\n  \"description\": \"<string>\",\n  \"link\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/shops/shop",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shops",
								"shop"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"msg\": \"<string>\"\n}"
				},
				{
					"name": "User not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"phone_number\": \"<string>\",\n  \"description\": \"<string>\",\n  \"link\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/shops/shop",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shops",
								"shop"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Validation Error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"phone_number\": \"<string>\",\n  \"description\": \"<string>\",\n  \"link\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/shops/shop",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shops",
								"shop"
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Get Shop Information Copy",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/shops/shop_info",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"shops",
						"shop_info"
					]
				}
			},
			"response": [
				{
					"name": "Shop information",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/shops/shop_info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shops",
								"shop_info"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": \"<integer>\",\n  \"owner_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"photo_shop\": \"<uri>\",\n  \"banner_shop\": \"<uri>\",\n  \"phone_number\": \"<string>\",\n  \"link\": \"<string>\"\n}"
				},
				{
					"name": "Unauthorized error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/shops/shop_info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shops",
								"shop_info"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"msg\": \"<string>\"\n}"
				},
				{
					"name": "Shop not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/shops/shop_info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shops",
								"shop_info"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Create a product Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201 Created', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test('\"message: The product was created successfully\"', function () {\r",
							"    var jsonObject = pm.response.json();\r",
							"    pm.expect(jsonObject.message).to.eql(\"The product was created successfully\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"category_id\": \"1\",\n  \"sub_category\": \"Заколки\",\n  \"product_name\": \"Калинова пісня\",\n  \"product_description\": \"string\",\n  \"is_active\": \"true\",\n  \"price\": \"60555.45\",\n  \"product_status\": \"В наявності\",\n  \"product_characteristic\": {\n    \"size\": \"700мм\",\n    \"weight\": \"10мм\"\n  },\n  \"is_return\": \"true\",\n  \"delivery_post\": {\n    \"novaPost\": \"true\",\n    \"ukrPost\": \"true\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"true\",\n    \"cashPayment\": \"true\",\n    \"securePayment\": \"true\"\n  },\n  \"is_unique\": \"true\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products/product",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"product"
					]
				}
			},
			"response": [
				{
					"name": "Product created successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"category_id\": \"<integer>\",\n  \"sub_category_id\": \"<integer>\",\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"The product was created successfully\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"category_id\": \"<integer>\",\n  \"sub_category_id\": \"<integer>\",\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Unauthorized error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"category_id\": \"<integer>\",\n  \"sub_category_id\": \"<integer>\",\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"msg\": \"<string>\"\n}"
				},
				{
					"name": "User not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"category_id\": \"<integer>\",\n  \"sub_category_id\": \"<integer>\",\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Validation error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"category_id\": \"<integer>\",\n  \"sub_category_id\": \"<integer>\",\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product"
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Add product photo mp4 < 5 mb 422",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 422 file mp4 < 3mb', function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});\r",
							"\r",
							"pm.test('\"message: Bad request. Does file have proper file format?\"', function () {\r",
							"    var jsonObject = pm.response.json();\r",
							"    pm.expect(jsonObject.error).to.eql(\"Bad request. Does file have proper file format?\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "multipart/form-data"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"description": "(Required) ",
							"type": "file",
							"src": "foto_profil/22.mp4"
						},
						{
							"key": "main",
							"value": "<boolean>",
							"description": "(Required) ",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/products/product_photo/22",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"product_photo",
						"22"
					]
				}
			},
			"response": [
				{
					"name": "Photo product uploaded successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Photo product uploaded successfully\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Product not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Request entity too large",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Request Entity Too Large",
					"code": 413,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Bad file format",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Add product photo mp4 > 5 mb 422",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 422 file mp4 > 3mb', function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});\r",
							"\r",
							"pm.test('error Bad request. Does file have proper file format?', function () {\r",
							"    var jsonObject = pm.response.json();\r",
							"    pm.expect(jsonObject.error).to.eql(\"Bad request. Does file have proper file format?\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "multipart/form-data"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"description": "(Required) ",
							"type": "file",
							"src": "foto_profil/video_2024-03-20_23-13-40.mp4"
						},
						{
							"key": "main",
							"value": "<boolean>",
							"description": "(Required) ",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/products/product_photo/22",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"product_photo",
						"22"
					]
				}
			},
			"response": [
				{
					"name": "Photo product uploaded successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Photo product uploaded successfully\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Product not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Request entity too large",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Request Entity Too Large",
					"code": 413,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Bad file format",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Add product photo > 5 mb 413",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 413 Request entity too large file > 3mb', function () {\r",
							"    pm.response.to.have.status(413);\r",
							"});\r",
							"\r",
							"// pm.test('error: File size too large. Maximum file size is 3MB.', function () {\r",
							"//     var jsonObject = pm.response.json();\r",
							"//     pm.expect(jsonObject.error).to.eql(\"File size too large. Maximum file size is 3MB.\");\r",
							"// });\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "multipart/form-data"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"description": "(Required) ",
							"type": "file",
							"src": "foto_profil/foto+5/5_4.jpg"
						},
						{
							"key": "main",
							"value": "<boolean>",
							"description": "(Required) ",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/products/product_photo/22",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"product_photo",
						"22"
					]
				}
			},
			"response": [
				{
					"name": "Photo product uploaded successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Photo product uploaded successfully\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Product not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Request entity too large",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Request Entity Too Large",
					"code": 413,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Bad file format",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Add product photo jpg",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 file format jpg', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('\"message: Photo product uploaded successfully\"', function () {\r",
							"    var jsonObject = pm.response.json();\r",
							"    pm.expect(jsonObject.message).to.eql(\"Photo product uploaded successfully\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "multipart/form-data"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"description": "(Required) ",
							"type": "file",
							"src": "Браслети.jpg"
						},
						{
							"key": "main",
							"value": "<boolean>",
							"description": "(Required) ",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/products/product_photo/22",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"product_photo",
						"22"
					]
				}
			},
			"response": [
				{
					"name": "Photo product uploaded successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Photo product uploaded successfully\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Product not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Request entity too large",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Request Entity Too Large",
					"code": 413,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Bad file format",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Add product photo png",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 file format png', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('\"message: Photo product uploaded successfully\"', function () {\r",
							"    var jsonObject = pm.response.json();\r",
							"    pm.expect(jsonObject.message).to.eql(\"Photo product uploaded successfully\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "multipart/form-data"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"description": "(Required) ",
							"type": "file",
							"src": "foto_profil/PNG.png"
						},
						{
							"key": "main",
							"value": "<boolean>",
							"description": "(Required) ",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/products/product_photo/22",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"product_photo",
						"22"
					]
				}
			},
			"response": [
				{
					"name": "Photo product uploaded successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Photo product uploaded successfully\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Product not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Request entity too large",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Request Entity Too Large",
					"code": 413,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Bad file format",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Add product photo jpeg",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 file format jpeg', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('\"message: Photo product uploaded successfully\"', function () {\r",
							"    var jsonObject = pm.response.json();\r",
							"    pm.expect(jsonObject.message).to.eql(\"Photo product uploaded successfully\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "multipart/form-data"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"description": "(Required) ",
							"type": "file",
							"src": "foto_profil/JPEG.jpg"
						},
						{
							"key": "main",
							"value": "<boolean>",
							"description": "(Required) ",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/products/product_photo/22",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"product_photo",
						"22"
					]
				}
			},
			"response": [
				{
					"name": "Photo product uploaded successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Photo product uploaded successfully\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Product not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Request entity too large",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Request Entity Too Large",
					"code": 413,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Bad file format",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Add product photo webp",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 file format webp', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('\"message: Photo product uploaded successfully\"', function () {\r",
							"    var jsonObject = pm.response.json();\r",
							"    pm.expect(jsonObject.message).to.eql(\"Photo product uploaded successfully\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "multipart/form-data"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"description": "(Required) ",
							"type": "file",
							"src": "foto_profil/WEBP.webp"
						},
						{
							"key": "main",
							"value": "<boolean>",
							"description": "(Required) ",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/products/product_photo/22",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"product_photo",
						"22"
					]
				}
			},
			"response": [
				{
					"name": "Photo product uploaded successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Photo product uploaded successfully\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Product not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Request entity too large",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Request Entity Too Large",
					"code": 413,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Bad file format",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Get Shop Products Information",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/products/shop_products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"shop_products"
					]
				}
			},
			"response": [
				{
					"name": "Shop products information",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/shop_products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"shop_products"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"has_previous\": \"<boolean>\",\n  \"has_next\": \"<boolean>\",\n  \"total_pages\": \"<integer>\",\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"category_id\": \"<integer>\",\n      \"sub_category_id\": \"<integer>\",\n      \"shop_id\": \"<integer>\",\n      \"product_name\": \"<string>\",\n      \"product_description\": \"<string>\",\n      \"price\": \"<double>\",\n      \"time_added\": \"<dateTime>\",\n      \"time_modifeid\": \"<dateTime>\",\n      \"is_active\": \"<boolean>\",\n      \"is_return\": \"<boolean>\",\n      \"is_unique\": \"<boolean>\",\n      \"product_status\": \"<string>\",\n      \"product_characteristic\": {\n        \"size\": \"<string>\",\n        \"weight\": \"<string>\"\n      },\n      \"delivery_post\": {},\n      \"method_of_payment\": {},\n      \"photos\": [\n        {\n          \"id\": \"<integer>\",\n          \"product_photo\": \"<uri>\",\n          \"timestamp\": \"<dateTime>\",\n          \"main\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"product_photo\": \"<uri>\",\n          \"timestamp\": \"<dateTime>\",\n          \"main\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<integer>\",\n      \"category_id\": \"<integer>\",\n      \"sub_category_id\": \"<integer>\",\n      \"shop_id\": \"<integer>\",\n      \"product_name\": \"<string>\",\n      \"product_description\": \"<string>\",\n      \"price\": \"<double>\",\n      \"time_added\": \"<dateTime>\",\n      \"time_modifeid\": \"<dateTime>\",\n      \"is_active\": \"<boolean>\",\n      \"is_return\": \"<boolean>\",\n      \"is_unique\": \"<boolean>\",\n      \"product_status\": \"<string>\",\n      \"product_characteristic\": {\n        \"size\": \"<string>\",\n        \"weight\": \"<string>\"\n      },\n      \"delivery_post\": {},\n      \"method_of_payment\": {},\n      \"photos\": [\n        {\n          \"id\": \"<integer>\",\n          \"product_photo\": \"<uri>\",\n          \"timestamp\": \"<dateTime>\",\n          \"main\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"product_photo\": \"<uri>\",\n          \"timestamp\": \"<dateTime>\",\n          \"main\": \"<boolean>\"\n        }\n      ]\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/shop_products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"shop_products"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"msg\": \"<string>\"\n}"
				},
				{
					"name": "Shop not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/shop_products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"shop_products"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Remove product photo 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('\"message: Photo successfully removed\"', function () {\r",
							"    var jsonObject = pm.response.json();\r",
							"    pm.expect(jsonObject.message).to.eql(\"Photo successfully removed\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"product_photo_id\": 23\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products/product_photo/22",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"product_photo",
						"22"
					]
				}
			},
			"response": [
				{
					"name": "Photo successfully removed",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"example\": {\n    \"product_photo_id\": 0\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Photo successfully removed\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"example\": {\n    \"product_photo_id\": 0\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Product photo not found",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"example\": {\n    \"product_photo_id\": 0\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Product photo not found\"\n  }\n}"
				}
			]
		},
		{
			"name": "Remove product photo 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404', function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test('\"error: Product photo is not found\"', function () {\r",
							"    var jsonObject = pm.response.json();\r",
							"    pm.expect(jsonObject.error).to.eql(\"Product photo is not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"product_photo_id\": 23\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products/product_photo/22",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"product_photo",
						"22"
					]
				}
			},
			"response": [
				{
					"name": "Photo successfully removed",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"example\": {\n    \"product_photo_id\": 0\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Photo successfully removed\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"example\": {\n    \"product_photo_id\": 0\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Product photo not found",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"example\": {\n    \"product_photo_id\": 0\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Product photo not found\"\n  }\n}"
				}
			]
		},
		{
			"name": "Remove product photo 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400', function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test('\"error: Invalid request data\"', function () {\r",
							"    var jsonObject = pm.response.json();\r",
							"    pm.expect(jsonObject.error).to.eql(\"Invalid request data\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\r\n  \"product_photo_id\": 23\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products/product_photo/22",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"product_photo",
						"22"
					]
				}
			},
			"response": [
				{
					"name": "Photo successfully removed",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"example\": {\n    \"product_photo_id\": 0\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Photo successfully removed\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"example\": {\n    \"product_photo_id\": 0\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Product photo not found",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"example\": {\n    \"product_photo_id\": 0\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Product photo not found\"\n  }\n}"
				}
			]
		},
		{
			"name": "Product not found 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404 Product Not Found', function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test('\"error: Product not found\"', function () {\r",
							"    var jsonObject = pm.response.json();\r",
							"    pm.expect(jsonObject.error).to.eql(\"Product not found\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "multipart/form-data"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"description": "(Required) ",
							"type": "file",
							"src": "foto_profil/PNG.png"
						},
						{
							"key": "main",
							"value": "<boolean>",
							"description": "(Required) ",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/products/product_photo/98",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"product_photo",
						"98"
					]
				}
			},
			"response": [
				{
					"name": "Photo product uploaded successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Photo product uploaded successfully\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Product not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Request entity too large",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Request Entity Too Large",
					"code": 413,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Bad file format",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Bad Request 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400', function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"// pm.test('\"error: Invalid request data\"', function () {\r",
							"//     var jsonObject = pm.response.json();\r",
							"//     pm.expect(jsonObject.error).to.eql(\"Invalid request data\");\r",
							"// });\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "multipart/form-data"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"description": "(Required) ",
							"type": "file",
							"src": "foto_profil/PNG.png"
						},
						{
							"key": "main",
							"value": "<boolean>",
							"description": "(Required) ",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/products/product_photo/21",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"product_photo",
						"21"
					]
				}
			},
			"response": [
				{
					"name": "Photo product uploaded successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Photo product uploaded successfully\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Product not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Request entity too large",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Request Entity Too Large",
					"code": 413,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Bad file format",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"value": "<string>",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "main",
									"value": "<boolean>",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/products/product_photo/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"product_photo",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Update a product 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('\"message: Product updated successfully\"', function () {\r",
							"    var jsonObject = pm.response.json();\r",
							"    pm.expect(jsonObject.message).to.eql(\"Product updated successfully\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"product_name\": \"Перлина полісся\",\n  \"product_description\": \"Цей аксесуар доповнює вашу щирість\",\n  \"is_active\": \"true\",\n  \"price\": \"21356444\",\n  \"product_status\": \"Під замовлення\",\n  \"product_characteristic\": {\n    \"size\": \"23мм\",\n    \"weight\": \"1мм\"\n  },\n  \"is_return\": \"true\",\n  \"delivery_post\": {\n    \"novaPost\": \"true\",\n    \"ukrPost\": \"true\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"true\",\n    \"cashPayment\": \"true\",\n    \"securePayment\": \"true\"\n  },\n  \"is_unique\": \"true\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products/update/22",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"update",
						"22"
					]
				}
			},
			"response": [
				{
					"name": "Product updated successfully",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Product updated successfully\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Unauthorized error response",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"msg\": \"<string>\"\n}"
				},
				{
					"name": "Product not found",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Validation error",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Get Shop Products Information Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('sub_category Заколки', function () {\r",
							"    pm.expect(pm.response.json().data[0].sub_category).to.eql(\"Заколки\");\r",
							"});\r",
							"\r",
							"pm.test('product_name Перлина полісся', function () {\r",
							"    pm.expect(pm.response.json().data[0].product_name).to.eql(\"Перлина полісся\");\r",
							"});\r",
							"\r",
							"pm.test('product_description', function () {\r",
							"    pm.expect(pm.response.json().data[0].product_description).to.eql(\"Цей аксесуар доповнює вашу щирість\");\r",
							"});\r",
							"\r",
							"pm.test('price', function () {\r",
							"    pm.expect(pm.response.json().data[0].price).to.eql(21356444);\r",
							"});\r",
							"\r",
							"pm.test('product_status', function () {\r",
							"    pm.expect(pm.response.json().data[0].product_status).to.eql(\"Під замовлення\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/products/shop_products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"shop_products"
					]
				}
			},
			"response": [
				{
					"name": "Shop products information",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/shop_products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"shop_products"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"has_previous\": \"<boolean>\",\n  \"has_next\": \"<boolean>\",\n  \"total_pages\": \"<integer>\",\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"category_id\": \"<integer>\",\n      \"sub_category_id\": \"<integer>\",\n      \"shop_id\": \"<integer>\",\n      \"product_name\": \"<string>\",\n      \"product_description\": \"<string>\",\n      \"price\": \"<double>\",\n      \"time_added\": \"<dateTime>\",\n      \"time_modifeid\": \"<dateTime>\",\n      \"is_active\": \"<boolean>\",\n      \"is_return\": \"<boolean>\",\n      \"is_unique\": \"<boolean>\",\n      \"product_status\": \"<string>\",\n      \"product_characteristic\": {\n        \"size\": \"<string>\",\n        \"weight\": \"<string>\"\n      },\n      \"delivery_post\": {},\n      \"method_of_payment\": {},\n      \"photos\": [\n        {\n          \"id\": \"<integer>\",\n          \"product_photo\": \"<uri>\",\n          \"timestamp\": \"<dateTime>\",\n          \"main\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"product_photo\": \"<uri>\",\n          \"timestamp\": \"<dateTime>\",\n          \"main\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<integer>\",\n      \"category_id\": \"<integer>\",\n      \"sub_category_id\": \"<integer>\",\n      \"shop_id\": \"<integer>\",\n      \"product_name\": \"<string>\",\n      \"product_description\": \"<string>\",\n      \"price\": \"<double>\",\n      \"time_added\": \"<dateTime>\",\n      \"time_modifeid\": \"<dateTime>\",\n      \"is_active\": \"<boolean>\",\n      \"is_return\": \"<boolean>\",\n      \"is_unique\": \"<boolean>\",\n      \"product_status\": \"<string>\",\n      \"product_characteristic\": {\n        \"size\": \"<string>\",\n        \"weight\": \"<string>\"\n      },\n      \"delivery_post\": {},\n      \"method_of_payment\": {},\n      \"photos\": [\n        {\n          \"id\": \"<integer>\",\n          \"product_photo\": \"<uri>\",\n          \"timestamp\": \"<dateTime>\",\n          \"main\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"product_photo\": \"<uri>\",\n          \"timestamp\": \"<dateTime>\",\n          \"main\": \"<boolean>\"\n        }\n      ]\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/shop_products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"shop_products"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"msg\": \"<string>\"\n}"
				},
				{
					"name": "Shop not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/shop_products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"shop_products"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Update a product 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 400', function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test('\"error: Invalid request data\"', function () {\r",
							"    var jsonObject = pm.response.json();\r",
							"    pm.expect(jsonObject.error).to.eql(\"Invalid request data\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"product_name\": \"Перлина полісся\",\n  \"product_description\": \"Цей аксесуар доповнює вашу щирість\",\n  \"is_active\": \"true\",\n  \"price\": \"21356444\",\n  \"product_status\": \"Під замовлення\",\n  \"product_characteristic\": {\n    \"size\": \"23мм\",\n    \"weight\": \"1мм\"\n    \"product_characteristic\": {\n    \"size\": \"700мм\",\n    \"weight\": \"10мм\"\n  },\n  \"is_return\": \"true\",\n  \"delivery_post\": {\n    \"novaPost\": \"true\",\n    \"ukrPost\": \"true\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"true\",\n    \"cashPayment\": \"true\",\n    \"securePayment\": \"true\"\n  },\n  \"is_unique\": \"true\"\n  }\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products/update/22",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"update",
						"22"
					]
				}
			},
			"response": [
				{
					"name": "Product updated successfully",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Product updated successfully\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Unauthorized error response",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"msg\": \"<string>\"\n}"
				},
				{
					"name": "Product not found",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Validation error",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Logout",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://127.0.0.1:8080/accounts/logout",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8080",
					"path": [
						"accounts",
						"logout"
					]
				}
			},
			"response": [
				{
					"name": "Token successfully revoked",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"logout"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"msg\": \"Access token successfully revoked\"\n  }\n}"
				}
			]
		},
		{
			"name": "Update a product 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 401', function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"// pm.test('\"msg: Missing Authorization Header\"', function () {\r",
							"//     var jsonObject = pm.response.json();\r",
							"//     pm.expect(jsonObject.msg).to.eql(\"Missing Authorization Header\");\r",
							"// });"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"product_name\": \"Перлина полісся\",\n  \"product_description\": \"Цей аксесуар доповнює вашу щирість\",\n  \"is_active\": \"true\",\n  \"price\": \"21356444\",\n  \"product_status\": \"Під замовлення\",\n  \"product_characteristic\": {\n    \"size\": \"23мм\",\n    \"weight\": \"1мм\"\n  },\n  \"is_return\": \"true\",\n  \"delivery_post\": {\n    \"novaPost\": \"true\",\n    \"ukrPost\": \"true\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"true\",\n    \"cashPayment\": \"true\",\n    \"securePayment\": \"true\"\n  },\n  \"is_unique\": \"true\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products/update/22",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"update",
						"22"
					]
				}
			},
			"response": [
				{
					"name": "Product updated successfully",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Product updated successfully\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Unauthorized error response",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"msg\": \"<string>\"\n}"
				},
				{
					"name": "Product not found",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Validation error",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Sign-In Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();\r",
							"var token = data.access_token;\r",
							"console.log(token);\r",
							"\r",
							"pm.collectionVariables.set(\"access_token\", token)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"Shops@mail.com\",\n  \"password\": \"Shopspwd1\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/accounts/signin",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"accounts",
						"signin"
					]
				}
			},
			"response": [
				{
					"name": "Successful sign-in",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounts/signin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"signin"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"access_token\": \"your_access_token\",\n    \"refresh_token\": \"your_refresh_token\"\n  }\n}"
				}
			]
		},
		{
			"name": "Update a product 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404', function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test('\"error: Product not found\"', function () {\r",
							"    var jsonObject = pm.response.json();\r",
							"    pm.expect(jsonObject.error).to.eql(\"Product not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6dHJ1ZSwiaWF0IjoxNzExNzk1MjI3LCJqdGkiOiIwYjdhNWQ5Zi1kZTNlLTRlMTktOTM0NC05MzQxY2E2NjAxZWIiLCJ0eXBlIjoiYWNjZXNzIiwic3ViIjo5OTk5OTk5OSwibmJmIjoxNzExNzk1MjI3LCJleHAiOjE3NDc3OTUyMjd9.M9GGQBL1NrqB8ztbSNLodpDiZ9KmYz_nRVpcFLMAvTU",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"product_name\": \"Перлина полісся\",\n  \"product_description\": \"Цей аксесуар доповнює вашу щирість\",\n  \"is_active\": \"true\",\n  \"price\": \"21356444\",\n  \"product_status\": \"Під замовлення\",\n  \"product_characteristic\": {\n    \"size\": \"23мм\",\n    \"weight\": \"1мм\"\n  },\n  \"is_return\": \"true\",\n  \"delivery_post\": {\n    \"novaPost\": \"true\",\n    \"ukrPost\": \"true\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"true\",\n    \"cashPayment\": \"true\",\n    \"securePayment\": \"true\"\n  },\n  \"is_unique\": \"true\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products/update/22",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"update",
						"22"
					]
				}
			},
			"response": [
				{
					"name": "Product updated successfully",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Product updated successfully\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Unauthorized error response",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"msg\": \"<string>\"\n}"
				},
				{
					"name": "Product not found",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Validation error",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Update a product 422",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 422', function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});\r",
							"\r",
							"pm.test('\"msg: Signature verification failed\"', function () {\r",
							"    var jsonObject = pm.response.json();\r",
							"    pm.expect(jsonObject.msg).to.eql(\"Signature verification failed\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6dHJ1ZSwiaWF0IjoxNzEzNDg4NTY4LCJqdGkiOiIzYzQxNTEwMC0zYzBhLTQ5Y2MtYWExYy01MTZjZjEwZTk0NjEiLCJ0eXBlIjoiYWNjZXNzIiwic3ViIjo2LCJuYmYiOjE3MTM0ODg1NjgsImV4cCI6MTcxMzQ5MjE2OH0.vinNFpOI7shN48XYp2qI4QaKBTDLUY0gmVxDRi5dMrt",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"product_name\": \"Перлина полісся\",\n  \"product_description\": \"Цей аксесуар доповнює вашу щирість\",\n  \"is_active\": \"true\",\n  \"price\": \"21356444\",\n  \"product_status\": \"Під замовлення\",\n  \"product_characteristic\": {\n    \"size\": \"23мм\",\n    \"weight\": \"1мм\"\n  },\n  \"is_return\": \"true\",\n  \"delivery_post\": {\n    \"novaPost\": \"true\",\n    \"ukrPost\": \"true\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"true\",\n    \"cashPayment\": \"true\",\n    \"securePayment\": \"true\"\n  },\n  \"is_unique\": \"true\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products/update/22",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"update",
						"22"
					]
				}
			},
			"response": [
				{
					"name": "Product updated successfully",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Product updated successfully\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Unauthorized error response",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"msg\": \"<string>\"\n}"
				},
				{
					"name": "Product not found",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Validation error",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"product_name\": \"<string>\",\n  \"product_description\": \"<string>\",\n  \"is_active\": \"<boolean>\",\n  \"price\": \"<number>\",\n  \"product_status\": \"<string>\",\n  \"product_characteristic\": {\n    \"size\": \"<string>\",\n    \"weight\": \"<string>\"\n  },\n  \"is_return\": \"<boolean>\",\n  \"delivery_post\": {\n    \"novaPost\": \"<boolean>\",\n    \"ukrPost\": \"<boolean>\"\n  },\n  \"method_of_payment\": {\n    \"cardPayment\": \"<boolean>\",\n    \"cashPayment\": \"<boolean>\",\n    \"securePayment\": \"<boolean>\"\n  },\n  \"is_unique\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/update/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"update",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Deactivate a product 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200 Product deactivated', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('\"message: Product deactivated\"', function () {\r",
							"    var jsonObject = pm.response.json();\r",
							"    pm.expect(jsonObject.message).to.eql(\"Product deactivated\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/products/deactivate/22",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"deactivate",
						"22"
					]
				}
			},
			"response": [
				{
					"name": "Product deactivated",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/deactivate/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"deactivate",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Product deactivated\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/deactivate/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"deactivate",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Unauthorized error response",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/deactivate/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"deactivate",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"msg\": \"<string>\"\n}"
				},
				{
					"name": "Product not found",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/deactivate/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"deactivate",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Product not found or permission not granted\"\n  }\n}"
				}
			]
		},
		{
			"name": "Deactivate a product 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404 Product not found', function () {\r",
							"    pm.response.to.have.status(404);\r",
							"})\r",
							"\r",
							"pm.test('\"error: Product not found or permission not granted\"', function () {\r",
							"    var jsonObject = pm.response.json();\r",
							"    pm.expect(jsonObject.error).to.eql(\"Product not found or permission not granted\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/products/deactivate/200",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"deactivate",
						"200"
					]
				}
			},
			"response": [
				{
					"name": "Product deactivated",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/deactivate/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"deactivate",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Product deactivated\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/deactivate/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"deactivate",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Unauthorized error response",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/deactivate/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"deactivate",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"msg\": \"<string>\"\n}"
				},
				{
					"name": "Product not found",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/deactivate/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"deactivate",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Product not found or permission not granted\"\n  }\n}"
				}
			]
		},
		{
			"name": "User Logout",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/accounts/logout",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"accounts",
						"logout"
					]
				}
			},
			"response": [
				{
					"name": "Token successfully revoked",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"logout"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"msg\": \"Access token successfully revoked\"\n  }\n}"
				}
			]
		},
		{
			"name": "Deactivate a product 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 401 Unauthorized error response', function () {\r",
							"    pm.response.to.have.status(401);\r",
							"})\r",
							"\r",
							"// pm.test('\"msg: Missing Authorization Header\"', function () {\r",
							"//     var jsonObject = pm.response.json();\r",
							"//     pm.expect(jsonObject.message).to.eql(\"Missing Authorization Header\");\r",
							"// });"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/products/deactivate/22",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"deactivate",
						"22"
					]
				}
			},
			"response": [
				{
					"name": "Product deactivated",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/deactivate/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"deactivate",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Product deactivated\"\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/deactivate/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"deactivate",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Unauthorized error response",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/deactivate/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"deactivate",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"msg\": \"<string>\"\n}"
				},
				{
					"name": "Product not found",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/deactivate/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"deactivate",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"example\": {\n    \"message\": \"Product not found or permission not granted\"\n  }\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://127.0.0.1:8080",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": ""
		}
	]
}